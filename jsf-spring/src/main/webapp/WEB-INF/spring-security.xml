<beans:beans xmlns="http://www.springframework.org/schema/security"
         xmlns:beans="http://www.springframework.org/schema/beans" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.1.xsd">

<http pattern="/javax.faces.resource/**" security="none"/>
<http pattern="/file/**" security="none"/>

<http auto-config="true" use-expressions="true">
 <form-login login-page="/login"/> 
 <logout logout-url="/logout"/>
 <intercept-url pattern="/login" access="permitAll"/>
 <intercept-url pattern="/accessdenied" access="permitAll"/>
 <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
 <intercept-url pattern="/**" access="hasRole('ROLE_USER')"/> 
 
 <remember-me services-ref="rememberMeServices"/>
</http>

<beans:bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
  <filter-chain-map path-type="ant">
   <filter-chain pattern="/*" filters="securityContextPersistenceFilter"></filter-chain>
  </filter-chain-map>
 </beans:bean>
 <beans:bean id="securityContextPersistenceFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
  <beans:property name="forceEagerSessionCreation" value="true"></beans:property>
 </beans:bean>

<!--Authentication Manager Details -->
<authentication-manager alias="authenticationManager">
    <authentication-provider user-service-ref="userService">
        <password-encoder hash="md5"/>
    </authentication-provider>
    <!-- Must be included here, otherwise,  rememberMeAuthenticationProvider won't be called second time when session times out-->
    <authentication-provider ref="rememberMeAuthenticationProvider" />
</authentication-manager>

<!-- Defines which remember me implementation to use - in this case using a database table to log 'remembered' tokens -->
<beans:bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices"> 
    <beans:property name="userDetailsService" ref="userService"/>
    <beans:property name="key" value="thisIsTheKeyValueForHashCreation" />
    <beans:property name="tokenRepository" ref="jdbcTokenRepository" />
    <beans:property name="alwaysRemember" value="false" />  
    <beans:property name="tokenValiditySeconds" value="3600"></beans:property>
</beans:bean> 
  
<!-- Uses a database table to maintain a set of persistent login data --> 
<beans:bean id="jdbcTokenRepository" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl"> 
    <beans:property name="createTableOnStartup" value="false" /> 
    <beans:property name="dataSource" ref="dataSource" /> 
</beans:bean> 
 
<beans:bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider"> 
  <beans:property name="key" value="thisIsTheKeyValueForHashCreation"/> 
</beans:bean>
<beans:bean id="rememberMeFilter"
	class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
	<beans:property name="rememberMeServices" ref="rememberMeServices" />
	<beans:property name="authenticationManager" ref="authenticationManager" />
</beans:bean>

</beans:beans>